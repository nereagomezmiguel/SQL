---- Video 5
--Ejercicio 1
SELECT *
FROM console_games

--Ejercicio 2
ALTER TABLE console_games
ADD COLUMN global_sales float8;

--Ejercicio 3
UPDATE console_games
SET global_sales= na_sales + eu_sales + jp_sales + other_sales;


--Ejercicio 4
ALTER TABLE console_games
ADD COLUMN na_sales_percent float8;

UPDATE console_games
SET na_sales_percent = na_sales/global_sales *100
WHERE global_sales > 0;

----Video 6
--Ejercicio 1:
SELECT * 
FROM console_games
ORDER BY game_rank ASC;

SELECT * 
FROM console_games
ORDER BY game_rank DESC;

--Ejercicio 2:
SELECT *
FROM console_games
ORDER BY platform ASC, game_year;

SELECT *
FROM console_games
ORDER BY platform ASC, game_year DESC;

SELECT *
FROM console_games
ORDER BY game_name ASC; --ordena: espacios, caracteres, alfabeto


----Video 7
--Ejercicio 1:
SELECT game_name, length(game_name)
FROM console_games;

SELECT left(publisher,4)
FROM console_games; --selecciona los 4 primeros caracteres por la izquierda de la columna especificada

SELECT right(publisher,4)
FROM console_games; --selecciona los 4 primeros caracteres por la derecha de la columna especificada

SELECT genre, reverse(genre)
FROM console_games; --da la vuelta a los caracteres de la columna indicada: de final a principio

---- Video 8
--Ejercicio 1:
SELECT * 
FROM console_dates;

/*----------------------------------------------------------------------------------------------
Esta forma, a diferencia de la anterior, no guarda la columna que has creado
------------------------------------------------------------------------------------------------*/
--Ejercicio 2
SELECT *, first_retail_availability - discontinued AS days_existed
FROM console_dates;

SELECT *,  (discontinued -first_retail_availability)/30 AS days_existed
FROM console_dates
ORDER BY days_existed;

--Ejercicio 3
SELECT *, DATE_PART('year', discontinued) - DATE_PART('year', first_retail_availability) AS years_existed
FROM console_dates
ORDER BY years_existed;

SELECT *, DATE_PART('month', discontinued) - DATE_PART('month', first_retail_availability) AS months_existed
FROM console_dates
ORDER BY months_existed;

-- Ejercicio 4:
SELECT *
FROM console_dates
WHERE DATE_PART('month', first_retail_availability)-11 =0; -- asi solo miramos el mes de noviembre

SELECT COUNT(platform_name)
FROM console_dates
WHERE DATE_PART('month', first_retail_availability)-11 =0; -- asi solo miramos el mes de noviembre(contamos cuantos hay)

SELECT *, AGE(discontinued, first_retail_availability) as platform_alive
FROM console_dates; -- asi obtenemos meses, años y dias

SELECT *, AGE(discontinued, first_retail_availability) as platform_alive
FROM console_dates
ORDER BY platform_alive; -- asi obtenemos meses, años y dias


---- Video 9
--Ejercicio 1: cambiamos el formato de la variable fecha, de integer a varchar
SELECT CAST(game_year as varchar(4))
FROM console_games
ORDER BY game_rank; 

SELECT game_year::varchar(4)
FROM console_games
ORDER BY game_rank;

--Ejercicio 2: cambiamos el formato de la variable fecha, de integer a date
SELECT to_date(CAST(game_year as varchar(4)),'yyyy')
FROM console_games
ORDER BY game_rank; 


----Video 10 
--Ejercicio 1:
SELECT *
FROM console_games
WHERE game_name IS NULL;

--Ejercicio 2:
SELECT *
FROM console_games
WHERE game_year = 1998 AND platform ='GB' AND genre ='Role-Playing';

--Ejercicio 3:
SELECT * 
FROM console_games
WHERE jp_sales IS NULL;
--rellenamos el dato nulo con la media de las ventas del resto de paises
UPDATE console_games
SET jp_sales = round((na_sales +eu_sales +other_sales)/3)
WHERE game_name = 'Brain Age: Train Your Brain in Minutes a Day';
